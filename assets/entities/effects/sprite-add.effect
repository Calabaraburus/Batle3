CCEffect %{
  temporaries:
    b1: &b1
      targets:
      - blend: true
        blendSrc: src_alpha
        blendDst: one
        blendSrcAlpha: src_alpha
        blendDstAlpha: one
    b2: &b2
      targets:
      - blend: true
        blendSrc: src_alpha
        blendDst: one_minus_src_alpha
        blendSrcAlpha: zero
        blendDstAlpha: one
        blendAlphaEq: max
    b3: &b3
      targets:
      - blend: true
        blendSrc: dst_color
        blendDst: one
        blendSrcAlpha: zero
        blendDstAlpha: dst_alpha
    d1: &d1 { depthTest: true, depthWrite: false }
    r1: &r1 { cullMode: none }
    p1: &p1
      mainTexture:            { value: grey }
     
    p2: &p2
      <<: *p1
      tintColor:              { value: [0.5, 0.5, 0.5, 1], editor: { type: color } }

  techniques:
  - name: add
    passes:
      - vert: sprite-vs:vert
        frag: tinted-fs:add
        rasterizerState: *r1
        depthStencilState: *d1
        blendState: *b1
        properties: *p2
      - vert: sprite-vs:vert
        frag: tinted-fs:add
        phase: deferred-forward
        rasterizerState: *r1
        depthStencilState: *d1
        blendState: *b1
        propertyIndex: 0
}%


CCProgram sprite-vs %{
  precision highp float;
  #include <builtin/uniforms/cc-global>
 
  in vec3 a_position;
  in vec2 a_texCoord;
  in vec4 a_color;

  out vec4 color;
  out vec2 uv;

  vec4 vert () {
    vec4 pos = vec4(a_position, 1);

 
     pos = cc_matViewProj * pos;

    uv = a_texCoord;
    color = a_color;

    return pos;
  }
}%

CCProgram tinted-fs %{
  precision mediump float;
  #include <legacy/output>
  #include <builtin/internal/embedded-alpha>
  #include <builtin/internal/alpha-test>

  in vec2 uv;
  in vec4 color;

  uniform sampler2D mainTexture;
  uniform FragConstants {
    vec4 tintColor;
  };

  #if USE_TEXTURE
    //in vec2 uv;
    #pragma builtin(local)
    layout(set = 2, binding = 12) uniform sampler2D cc_spriteTexture;
  #endif

  vec4 add () {
     vec4 o = vec4(1, 1, 1, 1);

    #if USE_TEXTURE
      o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv);
    #endif
    
    vec4 col = 2.0 * color * tintColor*o;

    return CCFragOutput(col);
  }
}%