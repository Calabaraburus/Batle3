{"version":3,"sources":["file:///C:/Projects/Cocos/ClbBlast/assets/entities/tiles/UsualTile/StdTileInterBehaviour.ts"],"names":["_decorator","StarTileController","TileInterBehaviour","TileState","StdTileController","ccclass","property","StdTileInterBehaviour","constructor","tileStateToLogic","Map","bomb","empty","rocket","star","tileClicked","field","tile","connectedTiles","getConnectedTiles","stdTile","modelName","state","model","fieldModel","getTileModel","resTile","createTile","row","col","tileModel","putOnField","createdForm","forEach","item","destroyTile"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAmBA,MAAAA,U,OAAAA,U;;AAEVC,MAAAA,kB,iBAAAA,kB;;AAEAC,MAAAA,kB,iBAAAA,kB;;AACAC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,iB,iBAAAA,iB;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;AAE9B;AACA;AACA;;uCAEaO,qB,WADZF,OAAO,CAAC,uBAAD,C,gBAAR,MACaE,qBADb;AAAA;AAAA,oDAC8D;AAI1DC,QAAAA,WAAW,GAAG;AACV;AADU,eAFNC,gBAEM,GAFqC,IAAIC,GAAJ,EAErC;AAEV,eAAKD,gBAAL,CAAsB;AAAA;AAAA,sCAAUE,IAAhC,IAAwC,MAAxC;AACA,eAAKF,gBAAL,CAAsB;AAAA;AAAA,sCAAUG,KAAhC,IAAyC,OAAzC;AACA,eAAKH,gBAAL,CAAsB;AAAA;AAAA,sCAAUI,MAAhC,IAA0C,QAA1C;AACA,eAAKJ,gBAAL,CAAsB;AAAA;AAAA,sCAAUK,IAAhC,IAAwC,MAAxC;AACH;;AAEDC,QAAAA,WAAW,CAACC,KAAD,EAAyBC,IAAzB,EAA+C;AAEtD,cAAI,EAAEA,IAAI;AAAA;AAAA,qDAAN,CAAJ,EAA0C;AACtC;AACH;;AAED,cAAIC,cAAc,GAAGF,KAAK,CAACG,iBAAN,CAAwBF,IAAxB,CAArB;AACA,cAAMG,OAAO,GAAGH,IAAhB;AAEA,cAAII,SAAS,GAAG,KAAKZ,gBAAL,CAAsBW,OAAO,CAACE,KAA9B,CAAhB;AACA,cAAIC,KAAK,GAAG,KAAKP,KAAL,CAAWQ,UAAX,CAAsBC,YAAtB,CAAmCJ,SAAnC,CAAZ;;AAEA,cAAIE,KAAK,IAAI,IAAT,IAAiBH,OAAO,CAACE,KAAR,IAAiB;AAAA;AAAA,sCAAUV,KAAhD,EAAuD;AACnD,gBAAMc,OAAO,GAAGV,KAAK,CAACW,UAAN,CAAiB;AAC7BC,cAAAA,GAAG,EAAEX,IAAI,CAACW,GADmB;AAE7BC,cAAAA,GAAG,EAAEZ,IAAI,CAACY,GAFmB;AAG7BC,cAAAA,SAAS,EAAEP,KAHkB;AAI7BQ,cAAAA,UAAU,EAAE;AAJiB,aAAjB,CAAhB;;AAOA,gBAAIL,OAAO;AAAA;AAAA,yDAAX,EAA2C;AACvC,kBAAMZ,IAAI,GAAGY,OAAb;AACAZ,cAAAA,IAAI,CAACkB,WAAL,CAAiBf,IAAI,CAACa,SAAtB;AACH;AACJ;;AAEDZ,UAAAA,cAAc,CAACe,OAAf,CAAuBC,IAAI,IAAIA,IAAI,CAACC,WAAL,EAA/B;AACH;;AAvCyD,O","sourcesContent":["import { CCString, _decorator, SpriteFrame, Component, Button } from 'cc';\r\nimport { FieldController } from '../../field/FieldController';\r\nimport { StarTileController } from '../StarTile/StarTileController';\r\nimport { TileController } from '../TileController';\r\nimport { TileInterBehaviour } from '../TileInterBehaviour';\r\nimport { TileState } from '../TileState';\r\nimport { StdTileController } from './StdTileController';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * Implements behaviour for simple tiles\r\n */\r\n@ccclass('StdTileInterBehaviour')\r\nexport class StdTileInterBehaviour extends TileInterBehaviour {\r\n\r\n    private tileStateToLogic: Map<TileState, string> = new Map<TileState, string>;\r\n\r\n    constructor() {\r\n        super();\r\n        this.tileStateToLogic[TileState.bomb] = \"bomb\";\r\n        this.tileStateToLogic[TileState.empty] = \"empty\";\r\n        this.tileStateToLogic[TileState.rocket] = \"rocket\";\r\n        this.tileStateToLogic[TileState.star] = \"star\";\r\n    }\r\n\r\n    tileClicked(field: FieldController, tile: TileController) {\r\n\r\n        if (!(tile instanceof StdTileController)) {\r\n            return;\r\n        }\r\n\r\n        let connectedTiles = field.getConnectedTiles(tile);\r\n        const stdTile = tile as StdTileController;\r\n\r\n        let modelName = this.tileStateToLogic[stdTile.state];\r\n        var model = this.field.fieldModel.getTileModel(modelName);\r\n\r\n        if (model != null && stdTile.state != TileState.empty) {\r\n            const resTile = field.createTile({\r\n                row: tile.row,\r\n                col: tile.col,\r\n                tileModel: model,\r\n                putOnField: true\r\n            });\r\n\r\n            if (resTile instanceof StarTileController) {\r\n                const star = resTile as StarTileController;\r\n                star.createdForm(tile.tileModel);\r\n            }\r\n        }\r\n\r\n        connectedTiles.forEach(item => item.destroyTile());\r\n    }\r\n}"]}